import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

var Timer garageLightsTimer = null

rule "soundTheAlarm"
when
  Item PIR1 changed from OPEN to CLOSED
then
  sendCommand(AlarmLight, ON)
end

rule "endTheAlarm"
when
  Item PIR1 changed from CLOSED to OPEN
then
  sendCommand(AlarmLight, OFF)
end

rule "FamilyRoomLights"
when
  Item FamilyRoomLights received command
then
	if (FamilyRoomLights.state == ON) {
		// must wait a couple seconds for the command to be run, 
		// otherwise conflict occurs with transmitter?
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_1_on 0330_2_on 0330_3_on")
  	} else { 
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_1_off 0330_2_off 0330_3_off")
  	}
  		
end

rule "Scene: Watching Movies"
when
  Item WatchingMovies received command
then
	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_1_off 0330_2_on 0330_3_off")
end

rule "Scene: Reading a Book Downstairs"
when
  Item ReadingBook received command
then
	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_1_off 0330_2_off 0330_3_on")
end

rule "SaltLamp"
when
  Item SaltLamp received command
then
	if (SaltLamp.state == ON) {
		// must wait a couple seconds for the command to be run, 
		// otherwise conflict occurs with transmitter?
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_4_on")
  	} else { 
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_4_off")
  	}
  		
end

rule "DansNightstandLamp"
when
  Item DansNightstandLamp received command
then
	if (DansNightstandLamp.state == ON) {
		// must wait a couple seconds for the command to be run, 
		// otherwise conflict occurs with transmitter?
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_5_on")
  	} else { 
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0330_5_off")
  	}
  		
end

rule "GarageLights"
when
  Item GarageLights received command
then
	if (GarageLights.state == ON) {
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0316_1_on")
  	} else { 
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0316_1_off")
  	}
  		
end

rule "Television"
when
  Item Television received command
then
	if (Television.state == OFF) {
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0316_2_off")
	  	// Turn it right back on, 
	  	// we don't want to stop power from being to the tv, 
	  	// just toggle it to shut it off
	  	sendCommand(Television, ON)
  	} else {
	  	executeCommandLine("/opt/433mhz-transceiver/RCSwitch.sh 0316_2_on")
	}
  		
end

rule "Turn on GarageLights when there is motion in the Garage"
when
  Item GaragePIR changed
then
	if (GaragePIR.state == CLOSED) {
		if (garageLightsTimer == null) {	
	        sendCommand(GarageLights, ON)
	        garageLightsTimer = createTimer(now.plusMinutes(3)) [| 	
	            sendCommand(GarageLights, OFF)
	            garageLightsTimer = null
	        ]
	    } else {
	        garageLightsTimer.reschedule(now.plusMinutes(3))
	    }
		sendCommand(GaragePIR, OPEN)
	}
end

rule "Turn off all lights when all phones leave wifi"
when
  Item DanPhone changed or 
  Item TiffPhone changed
then
	if (DanPhone.state == OFF && TiffPhone.state == OFF) {
		sendCommand(Lights, OFF)
  	}	
end



